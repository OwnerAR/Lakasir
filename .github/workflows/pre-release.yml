name: üöÄ Lakasir Pre-release with Versioned Zip

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build-and-release:
    name: Build and Pre-release
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üß∞ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: üõ†Ô∏è Setup .env for pipeline
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=lakasir" >> .env
          echo "DB_USERNAME=lakasir" >> .env
          echo "DB_PASSWORD=secret" >> .env
          echo "APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')" >> .env

      - name: üì¶ Install PHP dependencies
        run: composer install --optimize-autoloader --no-scripts

      - name: ‚öôÔ∏è Run artisan setup
        run: |
          php artisan config:clear
          php artisan config:cache
          php artisan migrate --force
          php artisan filament:assets
          php artisan livewire:publish --assets

      - name: üì• Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: üì¶ Install JS dependencies
        run: npm install

      - name: üõ†Ô∏è Build frontend assets
        run: npm run build

      - name: üìù Create version.txt
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "$VERSION" > version.txt

      - name: üìù Add changelog header
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          TODAY=$(date +'%Y-%m-%d')
          echo "## [${VERSION}] - ${TODAY}" > changelog-header.md
          echo "" >> changelog-header.md
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> changelog-header.md
          fi
          mv changelog-header.md CHANGELOG.md

      - name: üìÅ Prepare and zip Lakasir release
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          mkdir release
          rsync -av --progress ./ ./release \
            --exclude .git \
            --exclude .github \
            --exclude node_modules \
            --exclude tests \
            --exclude storage/logs \
            --exclude storage/framework/cache \
            --exclude vendor/bin

          cp version.txt release/version.txt

          cd release
          zip -r ../lakasir-${VERSION}.zip ./*

        shell: bash

      - name: üìÑ Generate release notes
        id: generate_notes
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const releaseNotes = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag
            });
            return releaseNotes.data.body;

      - name: üöÄ Create GitHub Pre-release with ZIP
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.generate_notes.outputs.result }}
          prerelease: true
          files: lakasir-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
